[project]
name = "ed-api"
version = "4.2.2"
description = "An API for Elite Dangerous"
authors = [
    { name = "Corentin Garcia", email = "corenting@gmail.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "aenum (>=3,<4)",
    "aiofiles (>=24,<25)",
    "alembic (>=1,<2)",
    "beautifulsoup4 (>=4,<5)",
    "cachier (>=3,<4)",
    "environs (>=14,<15)",
    "fastapi (>=0.115.11,<1)",
    "firebase-admin (>=6,<7)",
    "gunicorn (>=23,<24)",
    "httpx (>=0.28.1,<1)",
    "loguru (>=0.7.3,<1)",
    "pydantic (>=2,<3)",
    "python-dateutil (>=2,<3)",
    "SQLAlchemy (>=2,<3)",
    "typer (>=0.15.1,<1.0.0)",
    "uvicorn[standard] (>=0.34.0,<1.0.0)",
]

[project.urls]
repository = "https://github.com/corenting/ed-api"

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
mypy = "*"
ruff = "*"
types-python-dateutil = "*"

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
# Enable pycodestyle (E), Pyflakes (F), flake8-print (T20), ruff rules (RUF),
# flake8-comprehensions (C4), flake8-datetimez (DTZ), isort (I), pep8-naming (N)
# pyupgrade (UP), flake8-async (ASYNC), flake8-bandit (S), perflint (PERF),
# tryceratops (TRY)
select = ["E", "F", "T20", "RUF", "C4", "DTZ", "I", "N", "UP", "ASYNC", "S", "PERF", "TRY"]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"app/database/__init__.py" = ["F401"]

[tool.mypy]
plugins = "pydantic.mypy"
ignore_missing_imports = true
disallow_untyped_defs = true

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"
